version: 2.1

orbs:
  python: circleci/python@2.1.1
  node: circleci/node@5.1.0

jobs:
  build-backend:
    executor:
      name: python/default
    working_directory: ~/repo/CSCI-5828-Foundations-Sftware-Engr/agile-avengers/
    steps:
      - checkout
      - run:
          command: |
            cd server
            pip install --upgrade pip
            pip install -r requirements.txt
  build-frontend:
    executor:
      name: node/default
    working_directory: ~/repo/CSCI-5828-Foundations-Sftware-Engr/agile-avengers/
    steps:
      - checkout
      - run:
          command: |
            cd client
            npm install
  test-backend:
    docker:
      - image: cimg/python:3.8.10
      - image: cimg/postgres:10.17
        environment:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
          POSTGRES_DB: agile_avengers
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pip install -r server/requirements.txt
            pip install keycloak-client==0.15.4
            pip install python-keycloak==2.15.3
            pip install pytest pytest-coverage
      - run:
          name: Run tests
          command: |
            cd server
            pytest -v --junitxml=test-results/junit.xml tests
      - store_test_results:
          path: test-results
workflows:
  test_my_app:
    jobs:
      - build-backend
      - build-frontend
      - test-backend
#       - run:
#           name: Build and tag Docker image
#           command: |
#             docker build -t agile-avengers .



# version: 2.1
# jobs:
#   build:
#     docker:
#       - image: circleci/python:3.8.6
#     working_directory: ~/repo/CSCI-5828-Foundations-Sftware-Engr/agile-avengers/
#     steps:
#       - checkout
#       - run: python3 -m venv venv
#       - run: . venv/bin/activate
#       - run: pip install --upgrade pip
#       - run: cd server && pip install -r requirements.txt
#       - run: cd client && npm install && npm run build
#       - run: docker build -t agile-avengers .
#   deploy:
#     docker:
#       - image: google/cloud-sdk:alpine
#     working_directory: /app
#     steps:
#       - checkout
#       - run: echo $GCLOUD_SERVICE_KEY | base64 -d > key.json
#       - run: gcloud auth activate-service-account --key-file=key.json
#       - run: gcloud config set project myproject
#       - run: gcloud auth configure-docker
#       - run: docker tag myapp gcr.io/myproject/myapp:$CIRCLE_SHA1
#       - run: docker push gcr.io/myproject/myapp:$CIRCLE_SHA1
#       - run: gcloud run deploy myapp --image gcr.io/myproject/myapp:$CIRCLE_SHA1 --platform managed --allow-unauthenticated
